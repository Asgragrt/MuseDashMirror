{
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.AddScorePatchAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.AddScorePatchAttribute.html",
    "title": "Class AddScorePatchAttribute | MuseDashMirror",
    "keywords": "Class AddScorePatchAttribute Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run after AddScore(int, int, string, bool, float) Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class AddScorePatchAttribute : Attribute Inheritance object Attribute AddScorePatchAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.GameStartPatchAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.GameStartPatchAttribute.html",
    "title": "Class GameStartPatchAttribute | MuseDashMirror",
    "keywords": "Class GameStartPatchAttribute Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run after Il2CppFormulaBase.StageBattleComponent.GameStart() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class GameStartPatchAttribute : Attribute Inheritance object Attribute GameStartPatchAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.MenuSelectPatchAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.MenuSelectPatchAttribute.html",
    "title": "Class MenuSelectPatchAttribute | MuseDashMirror",
    "keywords": "Class MenuSelectPatchAttribute Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run after OnToggleChanged(int, int, bool) Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class MenuSelectPatchAttribute : Attribute Inheritance object Attribute MenuSelectPatchAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.PnlMenuPatchAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.PnlMenuPatchAttribute.html",
    "title": "Class PnlMenuPatchAttribute | MuseDashMirror",
    "keywords": "Class PnlMenuPatchAttribute Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run after Il2CppAssets.Scripts.UI.Panels.PnlMenu.Awake() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, EventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class PnlMenuPatchAttribute : Attribute Inheritance object Attribute PnlMenuPatchAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.PnlStagePatchAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.PnlStagePatchAttribute.html",
    "title": "Class PnlStagePatchAttribute | MuseDashMirror",
    "keywords": "Class PnlStagePatchAttribute Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run after Il2CppAssets.Scripts.UI.Panels.PnlStage.Awake() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, EventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class PnlStagePatchAttribute : Attribute Inheritance object Attribute PnlStagePatchAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.PnlVictoryPatchAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.PnlVictoryPatchAttribute.html",
    "title": "Class PnlVictoryPatchAttribute | MuseDashMirror",
    "keywords": "Class PnlVictoryPatchAttribute Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run after Il2Cpp.PnlVictory.OnVictory(Il2CppSystem.Object, Il2CppSystem.Object, Il2CppInterop.Runtime.InteropTypes.Arrays.Il2CppReferenceArray<Il2CppSystem.Object>) Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class PnlVictoryPatchAttribute : Attribute Inheritance object Attribute PnlVictoryPatchAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.SwitchLanguagePatchAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.SwitchLanguagePatchAttribute.html",
    "title": "Class SwitchLanguagePatchAttribute | MuseDashMirror",
    "keywords": "Class SwitchLanguagePatchAttribute Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run after Il2CppAssets.Scripts.UI.Specials.SwitchLanguages.OnClick() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, EventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class SwitchLanguagePatchAttribute : Attribute Inheritance object Attribute SwitchLanguagePatchAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.PatchEvents.html",
    "title": "Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Attributes.EventAttributes.PatchEvents Classes AddScorePatchAttribute Add this attribute to a method to make it run after AddScore(int, int, string, bool, float) Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) GameStartPatchAttribute Add this attribute to a method to make it run after Il2CppFormulaBase.StageBattleComponent.GameStart() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) MenuSelectPatchAttribute Add this attribute to a method to make it run after OnToggleChanged(int, int, bool) Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) PnlMenuPatchAttribute Add this attribute to a method to make it run after Il2CppAssets.Scripts.UI.Panels.PnlMenu.Awake() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, EventArgs e) PnlStagePatchAttribute Add this attribute to a method to make it run after Il2CppAssets.Scripts.UI.Panels.PnlStage.Awake() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, EventArgs e) PnlVictoryPatchAttribute Add this attribute to a method to make it run after Il2Cpp.PnlVictory.OnVictory(Il2CppSystem.Object, Il2CppSystem.Object, Il2CppInterop.Runtime.InteropTypes.Arrays.Il2CppReferenceArray<Il2CppSystem.Object>) Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, MenuSelectEventArgs e) SwitchLanguagePatchAttribute Add this attribute to a method to make it run after Il2CppAssets.Scripts.UI.Specials.SwitchLanguages.OnClick() Method can be any accessibility level but must be static The method must have the following signature: private static void MethodName(object sender, EventArgs e)"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterGameSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterGameSceneAttribute.html",
    "title": "Class EnterGameSceneAttribute | MuseDashMirror",
    "keywords": "Class EnterGameSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when entering Game Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class EnterGameSceneAttribute : Attribute Inheritance object Attribute EnterGameSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterLoadingSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterLoadingSceneAttribute.html",
    "title": "Class EnterLoadingSceneAttribute | MuseDashMirror",
    "keywords": "Class EnterLoadingSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when entering Loading Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class EnterLoadingSceneAttribute : Attribute Inheritance object Attribute EnterLoadingSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterMainSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterMainSceneAttribute.html",
    "title": "Class EnterMainSceneAttribute | MuseDashMirror",
    "keywords": "Class EnterMainSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when entering Main Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class EnterMainSceneAttribute : Attribute Inheritance object Attribute EnterMainSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterSceneAttribute.html",
    "title": "Class EnterSceneAttribute | MuseDashMirror",
    "keywords": "Class EnterSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when entering Any Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class EnterSceneAttribute : Attribute Inheritance object Attribute EnterSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterWelcomeSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.EnterWelcomeSceneAttribute.html",
    "title": "Class EnterWelcomeSceneAttribute | MuseDashMirror",
    "keywords": "Class EnterWelcomeSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when entering Welcome Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class EnterWelcomeSceneAttribute : Attribute Inheritance object Attribute EnterWelcomeSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitGameSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitGameSceneAttribute.html",
    "title": "Class ExitGameSceneAttribute | MuseDashMirror",
    "keywords": "Class ExitGameSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when exiting Game Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class ExitGameSceneAttribute : Attribute Inheritance object Attribute ExitGameSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitLoadingSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitLoadingSceneAttribute.html",
    "title": "Class ExitLoadingSceneAttribute | MuseDashMirror",
    "keywords": "Class ExitLoadingSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when exiting Loading Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class ExitLoadingSceneAttribute : Attribute Inheritance object Attribute ExitLoadingSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitMainSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitMainSceneAttribute.html",
    "title": "Class ExitMainSceneAttribute | MuseDashMirror",
    "keywords": "Class ExitMainSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when exiting Main Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class ExitMainSceneAttribute : Attribute Inheritance object Attribute ExitMainSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitSceneAttribute.html",
    "title": "Class ExitSceneAttribute | MuseDashMirror",
    "keywords": "Class ExitSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when exiting Any Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class ExitSceneAttribute : Attribute Inheritance object Attribute ExitSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitWelcomeSceneAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.ExitWelcomeSceneAttribute.html",
    "title": "Class ExitWelcomeSceneAttribute | MuseDashMirror",
    "keywords": "Class ExitWelcomeSceneAttribute Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Assembly MuseDashMirror.dll Add this attribute to a method to make it run when exiting Welcome Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) [AttributeUsage(AttributeTargets.Method)] public sealed class ExitWelcomeSceneAttribute : Attribute Inheritance object Attribute ExitWelcomeSceneAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.html": {
    "href": "api/MuseDashMirror.Attributes.EventAttributes.SceneEvents.html",
    "title": "Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Attributes.EventAttributes.SceneEvents Classes EnterGameSceneAttribute Add this attribute to a method to make it run when entering Game Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) EnterLoadingSceneAttribute Add this attribute to a method to make it run when entering Loading Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) EnterMainSceneAttribute Add this attribute to a method to make it run when entering Main Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) EnterSceneAttribute Add this attribute to a method to make it run when entering Any Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) EnterWelcomeSceneAttribute Add this attribute to a method to make it run when entering Welcome Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) ExitGameSceneAttribute Add this attribute to a method to make it run when exiting Game Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) ExitLoadingSceneAttribute Add this attribute to a method to make it run when exiting Loading Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) ExitMainSceneAttribute Add this attribute to a method to make it run when exiting Main Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) ExitSceneAttribute Add this attribute to a method to make it run when exiting Any Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e) ExitWelcomeSceneAttribute Add this attribute to a method to make it run when exiting Welcome Scene Method can be any accessibility level The method must have the following signature: private static void MethodName(object sender, SceneEventArgs e)"
  },
  "api/MuseDashMirror.Attributes.LoggerAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.LoggerAttribute.html",
    "title": "Class LoggerAttribute | MuseDashMirror",
    "keywords": "Class LoggerAttribute Namespace MuseDashMirror.Attributes Assembly MuseDashMirror.dll Create a MelonLoader.MelonLogger with the name of the class [Logger] internal partial class ExampleClass; [Logger(LoggerType.StaticReadonly)] internal static partial class ExampleClass; [AttributeUsage(AttributeTargets.Class)] public sealed class LoggerAttribute : Attribute Inheritance object Attribute LoggerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors LoggerAttribute(LoggerType) Create a MelonLoader.MelonLogger with the name of the class [Logger] internal partial class ExampleClass; [Logger(LoggerType.StaticReadonly)] internal static partial class ExampleClass; public LoggerAttribute(LoggerType type = LoggerType.StaticReadonly) Parameters type LoggerType Logger Type"
  },
  "api/MuseDashMirror.Attributes.PnlMenuToggleAttribute.html": {
    "href": "api/MuseDashMirror.Attributes.PnlMenuToggleAttribute.html",
    "title": "Class PnlMenuToggleAttribute | MuseDashMirror",
    "keywords": "Class PnlMenuToggleAttribute Namespace MuseDashMirror.Attributes Assembly MuseDashMirror.dll Attribute for creating a toggle in the PnlMenu [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] public sealed class PnlMenuToggleAttribute : Attribute Inheritance object Attribute PnlMenuToggleAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PnlMenuToggleAttribute(string, string, string) Attribute for creating a toggle in the PnlMenu public PnlMenuToggleAttribute(string name, string text, string fullBoolName) Parameters name string Toggle GameObject Name text string Toggle Text fullBoolName string Bounded Boolean FullName"
  },
  "api/MuseDashMirror.Attributes.html": {
    "href": "api/MuseDashMirror.Attributes.html",
    "title": "Namespace MuseDashMirror.Attributes | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Attributes Classes LoggerAttribute Create a MelonLoader.MelonLogger with the name of the class [Logger] internal partial class ExampleClass; [Logger(LoggerType.StaticReadonly)] internal static partial class ExampleClass; PnlMenuToggleAttribute Attribute for creating a toggle in the PnlMenu"
  },
  "api/MuseDashMirror.BattleComponent.html": {
    "href": "api/MuseDashMirror.BattleComponent.html",
    "title": "Class BattleComponent | MuseDashMirror",
    "keywords": "Class BattleComponent Namespace MuseDashMirror Assembly MuseDashMirror.dll Data inside game scene for battle public static class BattleComponent Inheritance object BattleComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChartLevel Level of the chart, only changed when entering the chart public static string ChartLevel { get; } Property Value string ChartName Chart name, only changed when entering the chart public static string ChartName { get; } Property Value string Charter Charter, only changed when entering the chart public static string Charter { get; } Property Value string CollectableNoteMissCount Collectable note miss count public static int CollectableNoteMissCount { get; } Property Value int Difficulty Difficulty of the chart (easy, hard, master, hidden, touhou), only changed when entering the chart public static int Difficulty { get; } Property Value int Get Blue collectable notes count public static int Get { get; } Property Value int GhostMissCount Ghost miss count public static int GhostMissCount { get; } Property Value int GreatCount Great count public static int GreatCount { get; } Property Value int Heart Heart count public static int Heart { get; } Property Value int IsInGame Becomes true when \"ready go\" finished public static bool IsInGame { get; } Property Value bool JumpOver Jump over count public static int JumpOver { get; } Property Value int MusicAuthor Music author, only changed when entering the chart public static string MusicAuthor { get; } Property Value string MusicDataList Music data for the chart, only changed when entering the chart public static List<MusicData> MusicDataList { get; } Property Value List<MusicData> NormalMissCount Normal miss count (without ghost and collectable note miss) public static int NormalMissCount { get; } Property Value int PerfectCount Perfect count public static int PerfectCount { get; } Property Value int SelectedAlbumUid The name for album package public static string SelectedAlbumUid { get; } Property Value string SelectedMusicIndex The index of selected music in its own album package public static int SelectedMusicIndex { get; } Property Value int SelectedMusicIndexInCurrent The index of selected music in current category public static int SelectedMusicIndexInCurrent { get; } Property Value int SelectedMusicUid The full path for selected music (album+music index) public static string SelectedMusicUid { get; } Property Value string Tick 3 decimal places number for game play time, start after isInGame public static float Tick { get; } Property Value float Methods Exit() Exit the current chart public static void Exit() Restart() Restart the current chart public static void Restart()"
  },
  "api/MuseDashMirror.Contracts.IPositionStrategy.html": {
    "href": "api/MuseDashMirror.Contracts.IPositionStrategy.html",
    "title": "Interface IPositionStrategy | MuseDashMirror",
    "keywords": "Interface IPositionStrategy Namespace MuseDashMirror.Contracts Assembly MuseDashMirror.dll Position Strategy Interface public interface IPositionStrategy Methods SetPosition(RectTransform, TransformParameters) Set Position of the RectTransform void SetPosition(RectTransform rectTransform, TransformParameters transformParameters) Parameters rectTransform RectTransform RectTransform transformParameters TransformParameters TransformParameters"
  },
  "api/MuseDashMirror.Contracts.html": {
    "href": "api/MuseDashMirror.Contracts.html",
    "title": "Namespace MuseDashMirror.Contracts | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Contracts Interfaces IPositionStrategy Position Strategy Interface"
  },
  "api/MuseDashMirror.EventArguments.AddScoreEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.AddScoreEventArgs.html",
    "title": "Class AddScoreEventArgs | MuseDashMirror",
    "keywords": "Class AddScoreEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event argument for AddScore(int, int, string, bool, float) Patch public sealed class AddScoreEventArgs : EventArgs Inheritance object EventArgs AddScoreEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors AddScoreEventArgs(TaskStageTarget, int, int, string, bool, float) Event argument for AddScore(int, int, string, bool, float) Patch public AddScoreEventArgs(TaskStageTarget taskStageTarget, int value, int id, string noteType, bool isAir, float time = -1) Parameters taskStageTarget TaskStageTarget value int id int noteType string isAir bool time float Properties Id Note Id public int Id { get; } Property Value int IsAir Is Air Note public bool IsAir { get; } Property Value bool NoteType Note Type public string NoteType { get; } Property Value string TaskStageTarget Il2CppAssets.Scripts.GameCore.HostComponent.TaskStageTarget Instance public TaskStageTarget TaskStageTarget { get; } Property Value TaskStageTarget Time Time public float Time { get; } Property Value float Value Score Value public int Value { get; } Property Value int"
  },
  "api/MuseDashMirror.EventArguments.GameStartEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.GameStartEventArgs.html",
    "title": "Class GameStartEventArgs | MuseDashMirror",
    "keywords": "Class GameStartEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event argument for Il2CppFormulaBase.StageBattleComponent.GameStart() Patch public sealed class GameStartEventArgs : EventArgs Inheritance object EventArgs GameStartEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors GameStartEventArgs(StageBattleComponent) Event argument for Il2CppFormulaBase.StageBattleComponent.GameStart() Patch public GameStartEventArgs(StageBattleComponent stageBattleComponent) Parameters stageBattleComponent StageBattleComponent Properties StageBattleComponent Il2CppFormulaBase.StageBattleComponent Instance public StageBattleComponent StageBattleComponent { get; } Property Value StageBattleComponent"
  },
  "api/MuseDashMirror.EventArguments.MenuSelectEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.MenuSelectEventArgs.html",
    "title": "Class MenuSelectEventArgs | MuseDashMirror",
    "keywords": "Class MenuSelectEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event Argument for OnToggleChanged(int, int, bool) Patch public sealed class MenuSelectEventArgs : EventArgs Inheritance object EventArgs MenuSelectEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MenuSelectEventArgs(int, int, bool) Event Argument for OnToggleChanged(int, int, bool) Patch public MenuSelectEventArgs(int listIndex, int index, bool isOn) Parameters listIndex int index int isOn bool Properties Index 0 for Option 1 for Elfin 2 for Character 4 for Trove 8 for Achievement public int Index { get; } Property Value int IsOn Whether the menu item is on public bool IsOn { get; } Property Value bool ListIndex 0 for Option 1 for Elfin 2 for Character 3 for Trove 4 for Achievement public int ListIndex { get; } Property Value int"
  },
  "api/MuseDashMirror.EventArguments.PnlMenuEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.PnlMenuEventArgs.html",
    "title": "Class PnlMenuEventArgs | MuseDashMirror",
    "keywords": "Class PnlMenuEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event Argument for Il2CppAssets.Scripts.UI.Panels.PnlMenu.Awake() Patch public sealed class PnlMenuEventArgs : EventArgs Inheritance object EventArgs PnlMenuEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PnlMenuEventArgs(PnlMenu) Event Argument for Il2CppAssets.Scripts.UI.Panels.PnlMenu.Awake() Patch public PnlMenuEventArgs(PnlMenu pnlMenu) Parameters pnlMenu PnlMenu Properties PnlMenu Il2CppAssets.Scripts.UI.Panels.PnlMenu Instance public PnlMenu PnlMenu { get; } Property Value PnlMenu"
  },
  "api/MuseDashMirror.EventArguments.PnlStageEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.PnlStageEventArgs.html",
    "title": "Class PnlStageEventArgs | MuseDashMirror",
    "keywords": "Class PnlStageEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event Argument for Il2CppAssets.Scripts.UI.Panels.PnlStage.Awake() Patch public sealed class PnlStageEventArgs : EventArgs Inheritance object EventArgs PnlStageEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PnlStageEventArgs(PnlStage) Event Argument for Il2CppAssets.Scripts.UI.Panels.PnlStage.Awake() Patch public PnlStageEventArgs(PnlStage pnlStage) Parameters pnlStage PnlStage Properties PnlStage Il2CppAssets.Scripts.UI.Panels.PnlStage Instance public PnlStage PnlStage { get; } Property Value PnlStage"
  },
  "api/MuseDashMirror.EventArguments.PnlVictoryEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.PnlVictoryEventArgs.html",
    "title": "Class PnlVictoryEventArgs | MuseDashMirror",
    "keywords": "Class PnlVictoryEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event Argument for Il2Cpp.PnlVictory.OnVictory(Il2CppSystem.Object, Il2CppSystem.Object, Il2CppInterop.Runtime.InteropTypes.Arrays.Il2CppReferenceArray<Il2CppSystem.Object>) Patch public sealed class PnlVictoryEventArgs : EventArgs Inheritance object EventArgs PnlVictoryEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PnlVictoryEventArgs(PnlVictory) Event Argument for Il2Cpp.PnlVictory.OnVictory(Il2CppSystem.Object, Il2CppSystem.Object, Il2CppInterop.Runtime.InteropTypes.Arrays.Il2CppReferenceArray<Il2CppSystem.Object>) Patch public PnlVictoryEventArgs(PnlVictory pnlVictory) Parameters pnlVictory PnlVictory Properties PnlVictory Il2Cpp.PnlVictory Instance public PnlVictory PnlVictory { get; } Property Value PnlVictory"
  },
  "api/MuseDashMirror.EventArguments.SceneEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.SceneEventArgs.html",
    "title": "Class SceneEventArgs | MuseDashMirror",
    "keywords": "Class SceneEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event Argument for Scene Events public sealed class SceneEventArgs : EventArgs Inheritance object EventArgs SceneEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SceneEventArgs(int, string) Event Argument for Scene Events public SceneEventArgs(int buildIndex, string sceneName) Parameters buildIndex int sceneName string Properties BuildIndex Build index of the scene public int BuildIndex { get; } Property Value int SceneName Name of the scene \"UISystem_PC\" for Main Scene \"GameMain\" for Game Scene \"Loading\" for Loading Scene \"Welcome\" for Welcome Scene public string SceneName { get; } Property Value string"
  },
  "api/MuseDashMirror.EventArguments.SwitchLanguagesEventArgs.html": {
    "href": "api/MuseDashMirror.EventArguments.SwitchLanguagesEventArgs.html",
    "title": "Class SwitchLanguagesEventArgs | MuseDashMirror",
    "keywords": "Class SwitchLanguagesEventArgs Namespace MuseDashMirror.EventArguments Assembly MuseDashMirror.dll Event Arguments for Il2CppAssets.Scripts.UI.Specials.SwitchLanguages.OnClick() Patch public sealed class SwitchLanguagesEventArgs : EventArgs Inheritance object EventArgs SwitchLanguagesEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SwitchLanguagesEventArgs(SwitchLanguages) Event Arguments for Il2CppAssets.Scripts.UI.Specials.SwitchLanguages.OnClick() Patch public SwitchLanguagesEventArgs(SwitchLanguages switchLanguages) Parameters switchLanguages SwitchLanguages Properties SwitchLanguages Il2CppAssets.Scripts.UI.Specials.SwitchLanguages Instance public SwitchLanguages SwitchLanguages { get; } Property Value SwitchLanguages"
  },
  "api/MuseDashMirror.EventArguments.html": {
    "href": "api/MuseDashMirror.EventArguments.html",
    "title": "Namespace MuseDashMirror.EventArguments | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.EventArguments Classes AddScoreEventArgs Event argument for AddScore(int, int, string, bool, float) Patch GameStartEventArgs Event argument for Il2CppFormulaBase.StageBattleComponent.GameStart() Patch MenuSelectEventArgs Event Argument for OnToggleChanged(int, int, bool) Patch PnlMenuEventArgs Event Argument for Il2CppAssets.Scripts.UI.Panels.PnlMenu.Awake() Patch PnlStageEventArgs Event Argument for Il2CppAssets.Scripts.UI.Panels.PnlStage.Awake() Patch PnlVictoryEventArgs Event Argument for Il2Cpp.PnlVictory.OnVictory(Il2CppSystem.Object, Il2CppSystem.Object, Il2CppInterop.Runtime.InteropTypes.Arrays.Il2CppReferenceArray<Il2CppSystem.Object>) Patch SceneEventArgs Event Argument for Scene Events SwitchLanguagesEventArgs Event Arguments for Il2CppAssets.Scripts.UI.Specials.SwitchLanguages.OnClick() Patch"
  },
  "api/MuseDashMirror.Extensions.CollectionExtensions.CollectionExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.CollectionExtensions.CollectionExtensions.html",
    "title": "Class CollectionExtensions | MuseDashMirror",
    "keywords": "Class CollectionExtensions Namespace MuseDashMirror.Extensions.CollectionExtensions Assembly MuseDashMirror.dll Collection Extension Methods for any Type public static class CollectionExtensions Inheritance object CollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute<T>(IEnumerable<T>, Action<T>) Execute an action for each element in the sequence public static void Execute<T>(this IEnumerable<T> sequence, Action<T> action) Parameters sequence IEnumerable<T> action Action<T> Type Parameters T"
  },
  "api/MuseDashMirror.Extensions.CollectionExtensions.TypeCollectionExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.CollectionExtensions.TypeCollectionExtensions.html",
    "title": "Class TypeCollectionExtensions | MuseDashMirror",
    "keywords": "Class TypeCollectionExtensions Namespace MuseDashMirror.Extensions.CollectionExtensions Assembly MuseDashMirror.dll Collection Extension Methods for Type. public static class TypeCollectionExtensions Inheritance object TypeCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetFieldInfosFromTypesByAttribute(IEnumerable<Type>, Type, BindingFlags) Get an IEnumerable of FieldInfo from an IEnumerable of Type by attribute type public static IEnumerable<FieldInfo> GetFieldInfosFromTypesByAttribute(this IEnumerable<Type> types, Type attributeType, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) Parameters types IEnumerable<Type> The type to extract FieldInfo attributeType Type Attribute Type flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<FieldInfo> A sequence of FieldInfo that match the given attribute type GetFieldInfosFromTypesByAttribute<T>(IEnumerable<Type>, BindingFlags) Get an IEnumerable of FieldInfo from an IEnumerable of Type by attribute type public static IEnumerable<FieldInfo> GetFieldInfosFromTypesByAttribute<T>(this IEnumerable<Type> types, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) where T : Attribute Parameters types IEnumerable<Type> The type to extract FieldInfo flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<FieldInfo> A sequence of FieldInfo that match the given attribute type Type Parameters T Attribute Type GetMemberInfosFromTypesByAttribute(IEnumerable<Type>, Type, BindingFlags) Get an IEnumerable of MemberInfo from an IEnumerable of Type by attribute type public static IEnumerable<MemberInfo> GetMemberInfosFromTypesByAttribute(this IEnumerable<Type> types, Type attributeType, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) Parameters types IEnumerable<Type> The type to extract MemberInfo attributeType Type Attribute Type flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<MemberInfo> A sequence of MemberInfo that match the given attribute type GetMemberInfosFromTypesByAttribute<T>(IEnumerable<Type>, BindingFlags) Get an IEnumerable of MemberInfo from an IEnumerable of Type by attribute type public static IEnumerable<MemberInfo> GetMemberInfosFromTypesByAttribute<T>(this IEnumerable<Type> types, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) where T : Attribute Parameters types IEnumerable<Type> The type to extract MemberInfo flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<MemberInfo> A sequence of MemberInfo that match the given attribute type Type Parameters T Attribute Type GetMethodInfosFromTypesByAttribute(IEnumerable<Type>, Type, BindingFlags) Get an IEnumerable of MethodInfo from an IEnumerable of Type by attribute type public static IEnumerable<MethodInfo> GetMethodInfosFromTypesByAttribute(this IEnumerable<Type> types, Type attributeType, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) Parameters types IEnumerable<Type> The type to extract MethodInfo attributeType Type Attribute Type flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<MethodInfo> A sequence of MethodInfo that match the given attribute type GetMethodInfosFromTypesByAttribute<T>(IEnumerable<Type>, BindingFlags) Get an IEnumerable of MethodInfo from an IEnumerable of Type by attribute type public static IEnumerable<MethodInfo> GetMethodInfosFromTypesByAttribute<T>(this IEnumerable<Type> types, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) where T : Attribute Parameters types IEnumerable<Type> The type to extract MethodInfo flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<MethodInfo> A sequence of MethodInfo that match the given attribute type Type Parameters T Attribute Type GetPropertyInfosFromTypesByAttribute(IEnumerable<Type>, Type, BindingFlags) Get an IEnumerable of PropertyInfo from an IEnumerable of Type by attribute type public static IEnumerable<PropertyInfo> GetPropertyInfosFromTypesByAttribute(this IEnumerable<Type> types, Type attributeType, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) Parameters types IEnumerable<Type> The type to extract PropertyInfo attributeType Type Attribute Type flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<PropertyInfo> A sequence of PropertyInfo that match the given attribute type GetPropertyInfosFromTypesByAttribute<T>(IEnumerable<Type>, BindingFlags) Get an IEnumerable of PropertyInfo from an IEnumerable of Type by attribute type public static IEnumerable<PropertyInfo> GetPropertyInfosFromTypesByAttribute<T>(this IEnumerable<Type> types, BindingFlags flags = BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) where T : Attribute Parameters types IEnumerable<Type> The type to extract PropertyInfo flags BindingFlags Defaults are Static | Public | NonPublic Returns IEnumerable<PropertyInfo> A sequence of PropertyInfo that match the given attribute type Type Parameters T Attribute Type"
  },
  "api/MuseDashMirror.Extensions.CollectionExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.CollectionExtensions.html",
    "title": "Namespace MuseDashMirror.Extensions.CollectionExtensions | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Extensions.CollectionExtensions Classes CollectionExtensions Collection Extension Methods for any Type TypeCollectionExtensions Collection Extension Methods for Type."
  },
  "api/MuseDashMirror.Extensions.ComponentExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.ComponentExtensions.html",
    "title": "Class ComponentExtensions | MuseDashMirror",
    "keywords": "Class ComponentExtensions Namespace MuseDashMirror.Extensions Assembly MuseDashMirror.dll UnityEngine.Component Extension Methods [Logger(LoggerType.StaticReadonly)] public static class ComponentExtensions Inheritance object ComponentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetText(Component, string) Set the text of a Component with a Text component public static void SetText(this Component component, string text) Parameters component Component GameObject Component text string Text"
  },
  "api/MuseDashMirror.Extensions.GameObjectExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.GameObjectExtensions.html",
    "title": "Class GameObjectExtensions | MuseDashMirror",
    "keywords": "Class GameObjectExtensions Namespace MuseDashMirror.Extensions Assembly MuseDashMirror.dll UnityEngine.GameObject Extension Methods [Logger(LoggerType.StaticReadonly)] public static class GameObjectExtensions Inheritance object GameObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddContentSizeFitter(GameObject) Add a ContentSizeFitter to a GameObject public static void AddContentSizeFitter(this GameObject gameObject) Parameters gameObject GameObject GameObject FindComponentInAncestors<T>(GameObject) Find a Component in the ancestors of a GameObject including itself public static T FindComponentInAncestors<T>(this GameObject gameObject) where T : Component Parameters gameObject GameObject GameObject Returns T Component Type Parameters T Component GetTotalScaleFactor(GameObject) Get the total scale factor of a GameObject public static Vector3 GetTotalScaleFactor(this GameObject gameObject) Parameters gameObject GameObject GameObject Returns Vector3 Scale Factor Vector3 SetColor(GameObject, Color) Set the color of a GameObject with a Text gameObject public static void SetColor(this GameObject gameObject, Color color) Parameters gameObject GameObject GameObject color Color Color SetParent(GameObject, GameObject, bool) Set the parent of a GameObject public static void SetParent(this GameObject gameObject, GameObject parent, bool worldPositionStays = true) Parameters gameObject GameObject GameObject parent GameObject Parent worldPositionStays bool World Position Stays SetRectTransform(GameObject, TransformParameters) Set the RectTransform of a GameObject using Transform Parameters public static void SetRectTransform(this GameObject gameObject, TransformParameters transformParameters) Parameters gameObject GameObject GameObject transformParameters TransformParameters Transform Parameters SetText(GameObject, string) Set the text of a GameObject with a Text gameObject public static void SetText(this GameObject gameObject, string text) Parameters gameObject GameObject GameObject text string Text SetTextComponent(GameObject, TextParameters) Set the Text Component of a GameObject using Text Parameters public static void SetTextComponent(this GameObject gameObject, TextParameters textParameters) Parameters gameObject GameObject GameObject textParameters TextParameters Text Parameters TryFindComponentInAncestors<T>(GameObject, out T) Try to find a Component in the ancestors of a GameObject including itself public static bool TryFindComponentInAncestors<T>(this GameObject gameObject, out T component) where T : Component Parameters gameObject GameObject GameObject component T Component Returns bool Found Type Parameters T Component"
  },
  "api/MuseDashMirror.Extensions.RectTransformExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.RectTransformExtensions.html",
    "title": "Class RectTransformExtensions | MuseDashMirror",
    "keywords": "Class RectTransformExtensions Namespace MuseDashMirror.Extensions Assembly MuseDashMirror.dll UnityEngine.RectTransform Extension Methods public static class RectTransformExtensions Inheritance object RectTransformExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UpdateTransformLayoutInfo(RectTransform) Update the layout information of the RectTransform public static void UpdateTransformLayoutInfo(this RectTransform rectTransform) Parameters rectTransform RectTransform RectTransform"
  },
  "api/MuseDashMirror.Extensions.StringExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | MuseDashMirror",
    "keywords": "Class StringExtensions Namespace MuseDashMirror.Extensions Assembly MuseDashMirror.dll string Extension Methods public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetVisibleTextWithEllipsis(string, Range) Get visible text with ellipsis public static string GetVisibleTextWithEllipsis(this string originalText, Range inVisibleTextRange) Parameters originalText string Original Text inVisibleTextRange Range The range of text to be replaced by ellipsis Returns string Result String Exceptions ArgumentOutOfRangeException GetVisibleTextWithEllipsisOrDefault(string, Range) Try to get visible text with ellipsis If the range is out of the bounds of the original text, the original text will be returned public static string GetVisibleTextWithEllipsisOrDefault(this string originalText, Range inVisibleTextRange) Parameters originalText string Original Text inVisibleTextRange Range The range of text to be replaced by ellipsis Returns string Result String"
  },
  "api/MuseDashMirror.Extensions.UnityEngineObjectExtensions.html": {
    "href": "api/MuseDashMirror.Extensions.UnityEngineObjectExtensions.html",
    "title": "Class UnityEngineObjectExtensions | MuseDashMirror",
    "keywords": "Class UnityEngineObjectExtensions Namespace MuseDashMirror.Extensions Assembly MuseDashMirror.dll UnityEngine.Object Extension Methods public static class UnityEngineObjectExtensions Inheritance object UnityEngineObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Destroy(Object) Destroy a UnityEngine.Object Component public static void Destroy(this Object obj) Parameters obj Object Object"
  },
  "api/MuseDashMirror.Extensions.html": {
    "href": "api/MuseDashMirror.Extensions.html",
    "title": "Namespace MuseDashMirror.Extensions | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Extensions Classes ComponentExtensions UnityEngine.Component Extension Methods GameObjectExtensions UnityEngine.GameObject Extension Methods RectTransformExtensions UnityEngine.RectTransform Extension Methods StringExtensions string Extension Methods UnityEngineObjectExtensions UnityEngine.Object Extension Methods"
  },
  "api/MuseDashMirror.Main.html": {
    "href": "api/MuseDashMirror.Main.html",
    "title": "Class Main | MuseDashMirror",
    "keywords": "Class Main Namespace MuseDashMirror Assembly MuseDashMirror.dll Main class inherit from MelonMod public class Main : MelonMod Inheritance object MelonBase MelonTypeBase<MelonMod> MelonMod Main Inherited Members MelonMod.OnSceneWasInitialized(int, string) MelonMod.OnLevelWasLoaded(int) MelonMod.OnLevelWasInitialized(int) MelonMod.InfoAttribute MelonMod.GameAttributes MelonTypeBase<MelonMod>.ExecuteAll(LemonAction<MelonMod>, bool, string) MelonTypeBase<MelonMod>.RegisteredMelons MelonTypeBase<MelonMod>.TypeName MelonTypeBase<MelonMod>.MelonTypeName MelonBase.OnMelonRegistered MelonBase.OnMelonUnregistered MelonBase.OnMelonInitializing MelonBase.OnRegister MelonBase.OnUnregister MelonBase.CreateWrapper<T>(string, string, string, MelonGameAttribute[], MelonProcessAttribute[], int, Color?, Color?, string) MelonBase.RegisterSorted<T>(IEnumerable<T>) MelonBase.OnPreSupportModule() MelonBase.OnUpdate() MelonBase.OnFixedUpdate() MelonBase.OnLateUpdate() MelonBase.OnGUI() MelonBase.OnApplicationQuit() MelonBase.OnPreferencesSaved() MelonBase.OnPreferencesSaved(string) MelonBase.OnPreferencesLoaded() MelonBase.OnPreferencesLoaded(string) MelonBase.OnEarlyInitializeMelon() MelonBase.OnLateInitializeMelon() MelonBase.FindIncompatiblities(MelonGameAttribute, string, string, string, string, MelonPlatformAttribute.CompatiblePlatforms, MelonPlatformDomainAttribute.CompatibleDomains) MelonBase.FindIncompatiblitiesFromContext() MelonBase.PrintIncompatibilities(MelonBase.Incompatibility[], MelonBase) MelonBase.Register() MelonBase.FindMelon(string, string) MelonBase.Unregister(string, bool) MelonBase.ExecuteAll(LemonAction<MelonBase>, bool, string) MelonBase.ExecuteList<T>(LemonAction<T>, List<T>, bool, string) MelonBase.SendMessageAll(string, params object[]) MelonBase.SendMessage(string, params object[]) MelonBase.OnApplicationLateStart() MelonBase.OnApplicationStart() MelonBase.OnModSettingsApplied() MelonBase.MelonAssembly MelonBase.Priority MelonBase.ConsoleColor MelonBase.AuthorConsoleColor MelonBase.Info MelonBase.AdditionalCredits MelonBase.SupportedProcesses MelonBase.Games MelonBase.SupportedGameVersions MelonBase.OptionalDependencies MelonBase.SupportedPlatforms MelonBase.SupportedDomain MelonBase.SupportedMLVersion MelonBase.SupportedMLBuild MelonBase.HarmonyInstance MelonBase.LoggerInstance MelonBase.ID MelonBase.Registered MelonBase.harmonyInstance MelonBase.Harmony MelonBase.Assembly MelonBase.HarmonyDontPatchAll MelonBase.Hash MelonBase.Location object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnDeinitializeMelon() Unload Fonts public override void OnDeinitializeMelon() OnInitializeMelon() Load Fonts public override void OnInitializeMelon() OnSceneWasLoaded(int, string) Scene load event public override void OnSceneWasLoaded(int buildIndex, string sceneName) Parameters buildIndex int sceneName string OnSceneWasUnloaded(int, string) Scene unload event public override void OnSceneWasUnloaded(int buildIndex, string sceneName) Parameters buildIndex int sceneName string"
  },
  "api/MuseDashMirror.Models.CameraDimension.html": {
    "href": "api/MuseDashMirror.Models.CameraDimension.html",
    "title": "Enum CameraDimension | MuseDashMirror",
    "keywords": "Enum CameraDimension Namespace MuseDashMirror.Models Assembly MuseDashMirror.dll Camera Dimension public enum CameraDimension Fields ThreeD = 1 3D Camera TwoD = 0 2D Camera"
  },
  "api/MuseDashMirror.Models.EllipseTextParameters.html": {
    "href": "api/MuseDashMirror.Models.EllipseTextParameters.html",
    "title": "Class EllipseTextParameters | MuseDashMirror",
    "keywords": "Class EllipseTextParameters Namespace MuseDashMirror.Models Assembly MuseDashMirror.dll Text parameters for creating Ellipse Text GameObject public class EllipseTextParameters : TextParameters Inheritance object TextParameters EllipseTextParameters Inherited Members TextParameters.Text TextParameters.Color TextParameters.Font TextParameters.FontSize TextParameters.Alignment object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EllipseTextParameters(string, Range) Create EllipseTextParameters with text content and invisible text range public EllipseTextParameters(string text, Range inVisibleTextRange) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range EllipseTextParameters(string, Range, int, TextAnchor) Create EllipseTextParameters with text content, invisible text range, font size and alignment public EllipseTextParameters(string text, Range inVisibleTextRange, int fontSize, TextAnchor alignment) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range fontSize int Text Font Size alignment TextAnchor Text Alignment EllipseTextParameters(string, Range, Color) Create EllipseTextParameters with text content, invisible text range and color public EllipseTextParameters(string text, Range inVisibleTextRange, Color color) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range color Color Text Color EllipseTextParameters(string, Range, Color, Font, int) Create EllipseTextParameters with text content, invisible text range, color, font and font size public EllipseTextParameters(string text, Range inVisibleTextRange, Color color, Font font, int fontSize) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range color Color Text Color font Font Text Font fontSize int Text Font Size EllipseTextParameters(string, Range, Color, Font, int, TextAnchor) Create EllipseTextParameters with text content, invisible text range, color, font, font size and alignment public EllipseTextParameters(string text, Range inVisibleTextRange, Color color, Font font, int fontSize, TextAnchor alignment) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range color Color Text Color font Font Text Font fontSize int Text Font Size alignment TextAnchor Text Alignment EllipseTextParameters(string, Range, Color, TextAnchor) Create EllipseTextParameters with text content, invisible text range, color and alignment public EllipseTextParameters(string text, Range inVisibleTextRange, Color color, TextAnchor alignment) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range color Color Text Color alignment TextAnchor Text Alignment EllipseTextParameters(string, Range, Font, int) Create EllipseTextParameters with text content, invisible text range, font and font size public EllipseTextParameters(string text, Range inVisibleTextRange, Font font, int fontSize) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range font Font Text Font fontSize int Text Font Size EllipseTextParameters(string, Range, Font, int, TextAnchor) Create EllipseTextParameters with text content, invisible text range, font, font size and alignment public EllipseTextParameters(string text, Range inVisibleTextRange, Font font, int fontSize, TextAnchor alignment) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range font Font Text Font fontSize int Text Font Size alignment TextAnchor Text Alignment EllipseTextParameters(string, Range, TextAnchor) Create EllipseTextParameters with text content, invisible text range and alignment public EllipseTextParameters(string text, Range inVisibleTextRange, TextAnchor alignment) Parameters text string Text Content inVisibleTextRange Range Invisible Text Range alignment TextAnchor Text Alignment Properties InVisibleTextRange Visible text range, default is the whole text public Range InVisibleTextRange { get; } Property Value Range Methods GetText() Get the text content public override string GetText() Returns string"
  },
  "api/MuseDashMirror.Models.PositionStrategies.CenterPositionStrategy.html": {
    "href": "api/MuseDashMirror.Models.PositionStrategies.CenterPositionStrategy.html",
    "title": "Class CenterPositionStrategy | MuseDashMirror",
    "keywords": "Class CenterPositionStrategy Namespace MuseDashMirror.Models.PositionStrategies Assembly MuseDashMirror.dll Position Strategy for setting the Center of the GameObject to be the position public sealed class CenterPositionStrategy : IPositionStrategy Inheritance object CenterPositionStrategy Implements IPositionStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods SetPosition(RectTransform, TransformParameters) Set Position of the RectTransform public void SetPosition(RectTransform rectTransform, TransformParameters transformParameters) Parameters rectTransform RectTransform transformParameters TransformParameters"
  },
  "api/MuseDashMirror.Models.PositionStrategies.LeftEdgePositionStrategy.html": {
    "href": "api/MuseDashMirror.Models.PositionStrategies.LeftEdgePositionStrategy.html",
    "title": "Class LeftEdgePositionStrategy | MuseDashMirror",
    "keywords": "Class LeftEdgePositionStrategy Namespace MuseDashMirror.Models.PositionStrategies Assembly MuseDashMirror.dll Position Strategy for setting the Left Edge of the GameObject to be the position public sealed class LeftEdgePositionStrategy : IPositionStrategy Inheritance object LeftEdgePositionStrategy Implements IPositionStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods SetPosition(RectTransform, TransformParameters) Set Position of the RectTransform public void SetPosition(RectTransform rectTransform, TransformParameters transformParameters) Parameters rectTransform RectTransform transformParameters TransformParameters"
  },
  "api/MuseDashMirror.Models.PositionStrategies.RightEdgePositionStrategy.html": {
    "href": "api/MuseDashMirror.Models.PositionStrategies.RightEdgePositionStrategy.html",
    "title": "Class RightEdgePositionStrategy | MuseDashMirror",
    "keywords": "Class RightEdgePositionStrategy Namespace MuseDashMirror.Models.PositionStrategies Assembly MuseDashMirror.dll Position Strategy for setting the Right Edge of the GameObject to be the position public sealed class RightEdgePositionStrategy : IPositionStrategy Inheritance object RightEdgePositionStrategy Implements IPositionStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods SetPosition(RectTransform, TransformParameters) Set Position of the RectTransform public void SetPosition(RectTransform rectTransform, TransformParameters transformParameters) Parameters rectTransform RectTransform transformParameters TransformParameters"
  },
  "api/MuseDashMirror.Models.PositionStrategies.html": {
    "href": "api/MuseDashMirror.Models.PositionStrategies.html",
    "title": "Namespace MuseDashMirror.Models.PositionStrategies | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Models.PositionStrategies Classes CenterPositionStrategy Position Strategy for setting the Center of the GameObject to be the position LeftEdgePositionStrategy Position Strategy for setting the Left Edge of the GameObject to be the position RightEdgePositionStrategy Position Strategy for setting the Right Edge of the GameObject to be the position"
  },
  "api/MuseDashMirror.Models.TextParameters.html": {
    "href": "api/MuseDashMirror.Models.TextParameters.html",
    "title": "Class TextParameters | MuseDashMirror",
    "keywords": "Class TextParameters Namespace MuseDashMirror.Models Assembly MuseDashMirror.dll Text parameters for creating Text GameObject public class TextParameters Inheritance object TextParameters Derived EllipseTextParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TextParameters(string) Create TextParameters with text content public TextParameters(string text) Parameters text string Text Content TextParameters(string, int, TextAnchor) Create TextParameters with text content, font size and alignment public TextParameters(string text, int fontSize, TextAnchor alignment) Parameters text string Text Content fontSize int Text Font Size alignment TextAnchor Text Alignment TextParameters(string, Color) Create TextParameters with text content and color public TextParameters(string text, Color color) Parameters text string Text Content color Color Text Color TextParameters(string, Color, Font, int) Create TextParameters with text content, color, font and font size public TextParameters(string text, Color color, Font font, int fontSize) Parameters text string Text Content color Color Text Color font Font Text Font fontSize int Text Font Size TextParameters(string, Color, Font, int, TextAnchor) Create TextParameters with text content, color, font, font size and alignment public TextParameters(string text, Color color, Font font, int fontSize, TextAnchor alignment) Parameters text string Text Content color Color Text Color font Font Text Font fontSize int Text Font Size alignment TextAnchor Text Alignment TextParameters(string, Color, TextAnchor) Create TextParameters with text content, color and alignment public TextParameters(string text, Color color, TextAnchor alignment) Parameters text string Text Content color Color Text Color alignment TextAnchor Text Alignment TextParameters(string, Font, int) Create TextParameters with text content, font and font size public TextParameters(string text, Font font, int fontSize) Parameters text string Text Content font Font Text Font fontSize int Text Font Size TextParameters(string, Font, int, TextAnchor) Create TextParameters with text content, font, font size and alignment public TextParameters(string text, Font font, int fontSize, TextAnchor alignment) Parameters text string Text Content font Font Text Font fontSize int Text Font Size alignment TextAnchor Text Alignment TextParameters(string, TextAnchor) Create TextParameters with text content and alignment public TextParameters(string text, TextAnchor alignment) Parameters text string Text Content alignment TextAnchor Text Alignment Properties Alignment Alignment of the text, default is UnityEngine.TextAnchor.MiddleCenter public TextAnchor Alignment { get; set; } Property Value TextAnchor Color Text color, default is UnityEngine.Color.white public Color Color { get; set; } Property Value Color Font Text font, default is NormalFont public Font Font { get; set; } Property Value Font FontSize Font size, default is 20 public int FontSize { get; set; } Property Value int Text Text content public string Text { get; } Property Value string Methods GetText() Get the text content public virtual string GetText() Returns string"
  },
  "api/MuseDashMirror.Models.ToggleParameters.html": {
    "href": "api/MuseDashMirror.Models.ToggleParameters.html",
    "title": "Class ToggleParameters | MuseDashMirror",
    "keywords": "Class ToggleParameters Namespace MuseDashMirror.Models Assembly MuseDashMirror.dll Parameters for creating Toggle public class ToggleParameters Inheritance object ToggleParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ToggleParameters(string, TextParameters, bool, Action<bool>) Create Toggle Parameters with Text Parameters and Boolean Callback public ToggleParameters(string toggleName, TextParameters textParameters, bool initialValue, Action<bool> callBack) Parameters toggleName string Toggle GameObject Name textParameters TextParameters Text Parameters initialValue bool Initial Value callBack Action<bool> Boolean Callback ToggleParameters(string, TextParameters, bool, Action<bool>, Color) Create Toggle Parameters with Text Parameters, Boolean Callback and Toggle Text Color public ToggleParameters(string toggleName, TextParameters textParameters, bool initialValue, Action<bool> callBack, Color textColor) Parameters toggleName string Toggle GameObject Name textParameters TextParameters Text Parameters initialValue bool Initial Value callBack Action<bool> Boolean Callback textColor Color Toggle Text Color ToggleParameters(string, TextParameters, bool, Action<bool>, ToggleGroup) Create Toggle Parameters with Text Parameters, Boolean Callback and Toggle Group public ToggleParameters(string toggleName, TextParameters textParameters, bool initialValue, Action<bool> callBack, ToggleGroup toggleGroup) Parameters toggleName string Toggle GameObject Name textParameters TextParameters Text Parameters initialValue bool Initial Value callBack Action<bool> Boolean Callback toggleGroup ToggleGroup Toggle Group ToggleParameters(string, TextParameters, bool, Action<bool>, ToggleGroup, Color) Create Toggle Parameters with Text Parameters, Boolean Callback, Toggle Group and Toggle Text Color public ToggleParameters(string toggleName, TextParameters textParameters, bool initialValue, Action<bool> callBack, ToggleGroup toggleGroup, Color textColor) Parameters toggleName string Toggle GameObject Name textParameters TextParameters Text Parameters initialValue bool Initial Value callBack Action<bool> Boolean Callback toggleGroup ToggleGroup Toggle Group textColor Color Toggle Text Color ToggleParameters(string, TextParameters, bool, Action<bool>, ToggleGroup, Color, Color) Create Toggle Parameters with Text Parameters, Boolean Callback, Toggle Group and CheckMark Color public ToggleParameters(string toggleName, TextParameters textParameters, bool initialValue, Action<bool> callBack, ToggleGroup toggleGroup, Color textColor, Color checkMarkColor) Parameters toggleName string Toggle GameObject Name textParameters TextParameters Text Parameters initialValue bool Initial Value callBack Action<bool> Boolean Callback toggleGroup ToggleGroup Toggle Group textColor Color Toggle Text Color checkMarkColor Color CheckMark Color Properties CallBack Boolean Callback public Action<bool> CallBack { get; set; } Property Value Action<bool> CheckMarkColor Toggle CheckMark Color public Color CheckMarkColor { get; set; } Property Value Color InitialValue Initial Value public bool InitialValue { get; set; } Property Value bool TextColor Toggle Text Color public Color TextColor { get; set; } Property Value Color TextParameters Text Parameters public TextParameters TextParameters { get; } Property Value TextParameters ToggleGroup Toggle Group public ToggleGroup ToggleGroup { get; set; } Property Value ToggleGroup ToggleName Toggle GameObject Name public string ToggleName { get; } Property Value string"
  },
  "api/MuseDashMirror.Models.TransformParameters.html": {
    "href": "api/MuseDashMirror.Models.TransformParameters.html",
    "title": "Class TransformParameters | MuseDashMirror",
    "keywords": "Class TransformParameters Namespace MuseDashMirror.Models Assembly MuseDashMirror.dll Transform parameters for creating GameObject public class TransformParameters Inheritance object TransformParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TransformParameters(Vector3) Create TransformParameters with Global Position public TransformParameters(Vector3 position) Parameters position Vector3 GameObject Position TransformParameters(Vector3, IPositionStrategy) Create TransformParameters with Global Position and Position Strategy public TransformParameters(Vector3 position, IPositionStrategy positionStrategy) Parameters position Vector3 GameObject Position positionStrategy IPositionStrategy Position Strategy TransformParameters(Vector3, bool) Create TransformParameters with position, choose Local Position or Global Position public TransformParameters(Vector3 position, bool isLocalPosition) Parameters position Vector3 GameObject Position isLocalPosition bool Local Position or not TransformParameters(Vector3, bool, IPositionStrategy) Create TransformParameters with Global Position, SizeDelta and Position Strategy public TransformParameters(Vector3 position, bool isLocalPosition, IPositionStrategy positionStrategy) Parameters position Vector3 GameObject Position isLocalPosition bool Local Position or not positionStrategy IPositionStrategy TransformParameters(Vector3, bool, Vector2) Create TransformParameters with Global Position,choose LocalPosition or GlobalPosition, SizeDelta public TransformParameters(Vector3 position, bool isLocalPosition, Vector2 sizeDelta) Parameters position Vector3 GameObject Position isLocalPosition bool Local Position or not sizeDelta Vector2 GameObject RectTransform SizeDelta TransformParameters(Vector3, Vector2) Create TransformParameters with Global Position and SizeDelta public TransformParameters(Vector3 position, Vector2 sizeDelta) Parameters position Vector3 GameObject Position sizeDelta Vector2 GameObject RectTransform SizeDelta Properties IsAutoSize If true, the size of the RectTransform will be automatically adjusted to fit the text public bool IsAutoSize { get; } Property Value bool IsLocalPosition Is Local Position or Global Position public bool IsLocalPosition { get; set; } Property Value bool LocalScale Scale of the GameObject public Vector3 LocalScale { get; set; } Property Value Vector3 Position Position of the GameObject public Vector3 Position { get; } Property Value Vector3 PositionStrategy Position Strategy public IPositionStrategy PositionStrategy { get; set; } Property Value IPositionStrategy SizeDelta Size of the RectTransform public Vector2 SizeDelta { get; } Property Value Vector2"
  },
  "api/MuseDashMirror.Models.html": {
    "href": "api/MuseDashMirror.Models.html",
    "title": "Namespace MuseDashMirror.Models | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Models Classes EllipseTextParameters Text parameters for creating Ellipse Text GameObject TextParameters Text parameters for creating Text GameObject ToggleParameters Parameters for creating Toggle TransformParameters Transform parameters for creating GameObject Enums CameraDimension Camera Dimension"
  },
  "api/MuseDashMirror.PatchEvents.html": {
    "href": "api/MuseDashMirror.PatchEvents.html",
    "title": "Class PatchEvents | MuseDashMirror",
    "keywords": "Class PatchEvents Namespace MuseDashMirror Assembly MuseDashMirror.dll Common events for patching public static class PatchEvents Inheritance object PatchEvents Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Events AddScorePatch An event to invoke methods when TaskStageTarget's AddScore method invokes public static event EventHandler<AddScoreEventArgs> AddScorePatch Event Type EventHandler<AddScoreEventArgs> GameStartPatch An event to invoke methods when StageBattleComponent's GameStart method invokes public static event EventHandler<GameStartEventArgs> GameStartPatch Event Type EventHandler<GameStartEventArgs> MenuSelectPatch An event to invoke methods when switching menu public static event EventHandler<MenuSelectEventArgs> MenuSelectPatch Event Type EventHandler<MenuSelectEventArgs> PnlMenuPatch An event to invoke methods when PnlMenu Awake method invokes public static event EventHandler<PnlMenuEventArgs> PnlMenuPatch Event Type EventHandler<PnlMenuEventArgs> PnlStagePatch An event to invoke methods when PnlStage Awake method invokes public static event EventHandler<PnlStageEventArgs> PnlStagePatch Event Type EventHandler<PnlStageEventArgs> PnlVictoryPatch An event to invoke methods when PnlVictory's OnVictory method invokes public static event EventHandler<PnlVictoryEventArgs> PnlVictoryPatch Event Type EventHandler<PnlVictoryEventArgs> SwitchLanguagesPatch An event to invoke methods when switching languages public static event EventHandler SwitchLanguagesPatch Event Type EventHandler"
  },
  "api/MuseDashMirror.PlayerData.html": {
    "href": "api/MuseDashMirror.PlayerData.html",
    "title": "Class PlayerData | MuseDashMirror",
    "keywords": "Class PlayerData Namespace MuseDashMirror Assembly MuseDashMirror.dll Player data public static class PlayerData Inheritance object PlayerData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Collections Player favorite chart list public static List<string> Collections { get; } Property Value List<string> Hides Player hide chart list public static List<string> Hides { get; } Property Value List<string> History Player history list public static List<string> History { get; } Property Value List<string> IsAutoFever Auto fever public static bool IsAutoFever { get; } Property Value bool Offset Music offset public static int Offset { get; } Property Value int PlayerLevel Player Level public static int PlayerLevel { get; } Property Value int PlayerName Player Name public static string PlayerName { get; } Property Value string SelectedCharacterIndex Selected character index public static int SelectedCharacterIndex { get; } Property Value int SelectedElfinIndex Selected elfin index public static int SelectedElfinIndex { get; } Property Value int Methods GetSelectedCharacterName(bool) Get character name public static string GetSelectedCharacterName(bool localized = true) Parameters localized bool Returns string GetSelectedElfinName(bool) Get elfin name public static string GetSelectedElfinName(bool localized = true) Parameters localized bool Returns string SetAutoFever(bool) Set auto fever public static void SetAutoFever(bool autoFever) Parameters autoFever bool SetCharacter(int) Set character with index public static void SetCharacter(int characterIndex) Parameters characterIndex int SetElfin(int) Set elfin with index public static void SetElfin(int elfinIndex) Parameters elfinIndex int SetOffset(int) Set music offset public static void SetOffset(int offset) Parameters offset int"
  },
  "api/MuseDashMirror.SceneInfo.html": {
    "href": "api/MuseDashMirror.SceneInfo.html",
    "title": "Class SceneInfo | MuseDashMirror",
    "keywords": "Class SceneInfo Namespace MuseDashMirror Assembly MuseDashMirror.dll Scene load/unload events public static class SceneInfo Inheritance object SceneInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsGameScene Is in the Game Scene public static bool IsGameScene { get; } Property Value bool IsLoadingScene Is in the loading scene public static bool IsLoadingScene { get; } Property Value bool IsMainScene Is in the Main Scene public static bool IsMainScene { get; } Property Value bool IsWelcomeScene Is in the Welcome Scene public static bool IsWelcomeScene { get; } Property Value bool Events OnEnterGameScene An event to invoke methods when entering game scene public static event EventHandler<SceneEventArgs> OnEnterGameScene Event Type EventHandler<SceneEventArgs> OnEnterLoadingScene An event to invoke methods when entering loading scene public static event EventHandler<SceneEventArgs> OnEnterLoadingScene Event Type EventHandler<SceneEventArgs> OnEnterMainScene An event to invoke methods when entering main scene public static event EventHandler<SceneEventArgs> OnEnterMainScene Event Type EventHandler<SceneEventArgs> OnEnterScene An event to invoke methods when entering a scene public static event EventHandler<SceneEventArgs> OnEnterScene Event Type EventHandler<SceneEventArgs> OnEnterWelcomeScene An event to invoke methods when entering welcome scene public static event EventHandler<SceneEventArgs> OnEnterWelcomeScene Event Type EventHandler<SceneEventArgs> OnExitGameScene An event to invoke methods when exiting game scene public static event EventHandler<SceneEventArgs> OnExitGameScene Event Type EventHandler<SceneEventArgs> OnExitLoadingScene An event to invoke methods when exiting loading scene public static event EventHandler<SceneEventArgs> OnExitLoadingScene Event Type EventHandler<SceneEventArgs> OnExitMainScene An event to invoke methods when exiting main scene public static event EventHandler<SceneEventArgs> OnExitMainScene Event Type EventHandler<SceneEventArgs> OnExitScene An event to invoke methods when exiting a scene public static event EventHandler<SceneEventArgs> OnExitScene Event Type EventHandler<SceneEventArgs> OnExitWelcomeScene An event to invoke methods when exiting welcome scene public static event EventHandler<SceneEventArgs> OnExitWelcomeScene Event Type EventHandler<SceneEventArgs>"
  },
  "api/MuseDashMirror.Shared.LoggerType.html": {
    "href": "api/MuseDashMirror.Shared.LoggerType.html",
    "title": "Enum LoggerType | MuseDashMirror",
    "keywords": "Enum LoggerType Namespace MuseDashMirror.Shared Assembly MuseDashMirror.dll Generated Logger Type public enum LoggerType Fields Readonly = 0 Readonly Logger StaticReadonly = 1 Static Readonly Logger"
  },
  "api/MuseDashMirror.Shared.html": {
    "href": "api/MuseDashMirror.Shared.html",
    "title": "Namespace MuseDashMirror.Shared | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Shared Enums LoggerType Generated Logger Type"
  },
  "api/MuseDashMirror.UIComponents.CanvasUtils.html": {
    "href": "api/MuseDashMirror.UIComponents.CanvasUtils.html",
    "title": "Class CanvasUtils | MuseDashMirror",
    "keywords": "Class CanvasUtils Namespace MuseDashMirror.UIComponents Assembly MuseDashMirror.dll Methods for creating canvas and related components [Logger(LoggerType.StaticReadonly)] public static class CanvasUtils Inheritance object CanvasUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateCameraCanvas(string, CameraDimension) Create a ScreenSpaceCamera canvas with specified camera dimension public static GameObject CreateCameraCanvas(string canvasName, CameraDimension cameraDimension) Parameters canvasName string Canvas Name cameraDimension CameraDimension TwoD or ThreeD Returns GameObject Canvas GameObject CreateCameraCanvas(string, CameraDimension, GameObject) Create a ScreenSpaceCamera canvas with specified camera dimension and parent public static GameObject CreateCameraCanvas(string canvasName, CameraDimension cameraDimension, GameObject parent) Parameters canvasName string Canvas Name cameraDimension CameraDimension TwoD or ThreeD parent GameObject Parent GameObject Returns GameObject Canvas GameObject CreateCameraCanvas(string, string) Create a ScreenSpaceCamera canvas with specified camera public static GameObject CreateCameraCanvas(string canvasName, string cameraName) Parameters canvasName string Canvas Name cameraName string Camera Name Returns GameObject Canvas GameObject CreateCameraCanvas(string, string, GameObject) Create a ScreenSpaceCamera canvas with specified camera and parent public static GameObject CreateCameraCanvas(string canvasName, string cameraName, GameObject parent) Parameters canvasName string Canvas Name cameraName string Camera Name parent GameObject Parent GameObject Returns GameObject Canvas GameObject CreateCanvas(string, RenderMode, Camera, GameObject) Create canvas base method public static GameObject CreateCanvas(string canvasName, RenderMode renderMode, Camera camera, GameObject parent) Parameters canvasName string Canvas Name renderMode RenderMode Render Mode camera Camera Camera GameObject parent GameObject Parent GameObject Returns GameObject Canvas GameObject CreateOverlayCanvas(string) Create a ScreenSpaceOverlay canvas public static GameObject CreateOverlayCanvas(string canvasName) Parameters canvasName string Canvas Name Returns GameObject Canvas GameObject GetCamera(CameraDimension) Get camera by dimension public static Camera GetCamera(CameraDimension cameraDimension) Parameters cameraDimension CameraDimension TwoD or ThreeD Returns Camera Camera Exceptions ArgumentOutOfRangeException GetCamera(string) Get camera by name public static Camera GetCamera(string cameraName) Parameters cameraName string Camera Name Returns Camera Camera"
  },
  "api/MuseDashMirror.UIComponents.Colors.html": {
    "href": "api/MuseDashMirror.UIComponents.Colors.html",
    "title": "Class Colors | MuseDashMirror",
    "keywords": "Class Colors Namespace MuseDashMirror.UIComponents Assembly MuseDashMirror.dll Default colors public static class Colors Inheritance object Colors Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Blue Custom color blue public static Color Blue { get; } Property Value Color Silver Custom color Silver public static Color Silver { get; } Property Value Color ToggleCheckMarkColor Default checkmark color for toggle public static Color ToggleCheckMarkColor { get; } Property Value Color ToggleTextColor Default text color for toggle public static Color ToggleTextColor { get; } Property Value Color"
  },
  "api/MuseDashMirror.UIComponents.Fonts.html": {
    "href": "api/MuseDashMirror.UIComponents.Fonts.html",
    "title": "Class Fonts | MuseDashMirror",
    "keywords": "Class Fonts Namespace MuseDashMirror.UIComponents Assembly MuseDashMirror.dll Default fonts public static class Fonts Inheritance object Fonts Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MiniSimpleSuperThickBlackFont MiniSimpleSuperThickBlack Font public static Font MiniSimpleSuperThickBlackFont { get; } Property Value Font NormalFont Normal font public static Font NormalFont { get; } Property Value Font SnapsTasteFont Snaps Taste font public static Font SnapsTasteFont { get; } Property Value Font SourceHanSansCnHeavyFont SourceHanSansCN-Heavy Font public static Font SourceHanSansCnHeavyFont { get; } Property Value Font"
  },
  "api/MuseDashMirror.UIComponents.TextGameObjectUtils.html": {
    "href": "api/MuseDashMirror.UIComponents.TextGameObjectUtils.html",
    "title": "Class TextGameObjectUtils | MuseDashMirror",
    "keywords": "Class TextGameObjectUtils Namespace MuseDashMirror.UIComponents Assembly MuseDashMirror.dll Methods for creating text GameObject public static class TextGameObjectUtils Inheritance object TextGameObjectUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateText(string, string, TextParameters, TransformParameters) Create a text GameObject public static GameObject CreateText(string name, string parentName, TextParameters textParameters, TransformParameters transformParameters) Parameters name string GameObject Name parentName string Parent GameObject Name textParameters TextParameters Text Parameters transformParameters TransformParameters Transform Parameters Returns GameObject Text GameObject CreateText(string, GameObject, TextParameters, TransformParameters) Create a text GameObject public static GameObject CreateText(string name, GameObject parent, TextParameters textParameters, TransformParameters transformParameters) Parameters name string GameObject Name parent GameObject Parent GameObject textParameters TextParameters Text Parameters transformParameters TransformParameters Transform Parameters Returns GameObject Text GameObject"
  },
  "api/MuseDashMirror.UIComponents.ToggleUtils.html": {
    "href": "api/MuseDashMirror.UIComponents.ToggleUtils.html",
    "title": "Class ToggleUtils | MuseDashMirror",
    "keywords": "Class ToggleUtils Namespace MuseDashMirror.UIComponents Assembly MuseDashMirror.dll Methods for creating toggle public static class ToggleUtils Inheritance object ToggleUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreatePnlMenuToggle(ToggleParameters) Create a toggle in the PnlMenu public static GameObject CreatePnlMenuToggle(ToggleParameters toggleParameters) Parameters toggleParameters ToggleParameters Toggle Parameters Returns GameObject Toggle GameObject CreatePnlMenuToggle(string, string, bool, Action<bool>) Create a toggle in the PnlMenu public static GameObject CreatePnlMenuToggle(string name, string text, bool initialValue, Action<bool> callback) Parameters name string GameObject Name text string Toggle Text initialValue bool Initial Value for Toggle callback Action<bool> Boolean Callback Returns GameObject Toggle GameObject CreatePnlMenuToggle<T>(string, string, T, Expression<Func<T, bool>>) Create a toggle in the PnlMenu public static GameObject CreatePnlMenuToggle<T>(string name, string text, T target, Expression<Func<T, bool>> expression) Parameters name string GameObject Name text string Toggle Text target T Target Object the Toggle's value will be bounded to expression Expression<Func<T, bool>> An expression that represents a Boolean property of the Target Object Returns GameObject Toggle GameObject Type Parameters T The type of the Target Object Exceptions ArgumentException Thrown when the provided expression does not represent a property or field of the target object CreateToggle(ToggleParameters, TransformParameters) Create a toggle public static GameObject CreateToggle(ToggleParameters toggleParameters, TransformParameters transformParameters) Parameters toggleParameters ToggleParameters Toggle Parameters transformParameters TransformParameters Transform Parameters Returns GameObject CreateToggle(string, ToggleParameters, TransformParameters) Create a toggle with parent public static GameObject CreateToggle(string parentName, ToggleParameters toggleParameters, TransformParameters transformParameters) Parameters parentName string Parent GameObject Name toggleParameters ToggleParameters Toggle Parameters transformParameters TransformParameters Transform Parameters Returns GameObject Toggle GameObject CreateToggle(GameObject, ToggleParameters, TransformParameters) Create a toggle with parent public static GameObject CreateToggle(GameObject parent, ToggleParameters toggleParameters, TransformParameters transformParameters) Parameters parent GameObject Parent GameObject toggleParameters ToggleParameters Toggle Parameters transformParameters TransformParameters Transform Parameters Returns GameObject Toggle GameObject CreateToggle(Transform, ToggleParameters, TransformParameters) Create a toggle with parent public static GameObject CreateToggle(Transform parentTransform, ToggleParameters toggleParameters, TransformParameters transformParameters) Parameters parentTransform Transform Parent GameObject Transform toggleParameters ToggleParameters Toggle Parameters transformParameters TransformParameters Transform Parameters Returns GameObject"
  },
  "api/MuseDashMirror.UIComponents.html": {
    "href": "api/MuseDashMirror.UIComponents.html",
    "title": "Namespace MuseDashMirror.UIComponents | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.UIComponents Classes CanvasUtils Methods for creating canvas and related components Colors Default colors Fonts Default fonts TextGameObjectUtils Methods for creating text GameObject ToggleUtils Methods for creating toggle"
  },
  "api/MuseDashMirror.Utils.GameObjectUtils.html": {
    "href": "api/MuseDashMirror.Utils.GameObjectUtils.html",
    "title": "Class GameObjectUtils | MuseDashMirror",
    "keywords": "Class GameObjectUtils Namespace MuseDashMirror.Utils Assembly MuseDashMirror.dll Methods related with GameObject [Logger(LoggerType.StaticReadonly)] public static class GameObjectUtils Inheritance object GameObjectUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetGameObject(string) Get GameObject with specified path/name public static GameObject GetGameObject(string gameObjectPath) Parameters gameObjectPath string GameObject Path Returns GameObject GameObject"
  },
  "api/MuseDashMirror.Utils.html": {
    "href": "api/MuseDashMirror.Utils.html",
    "title": "Namespace MuseDashMirror.Utils | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror.Utils Classes GameObjectUtils Methods related with GameObject"
  },
  "api/MuseDashMirror.html": {
    "href": "api/MuseDashMirror.html",
    "title": "Namespace MuseDashMirror | MuseDashMirror",
    "keywords": "Namespace MuseDashMirror Classes BattleComponent Data inside game scene for battle Main Main class inherit from MelonMod PatchEvents Common events for patching PlayerData Player data SceneInfo Scene load/unload events"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | MuseDashMirror",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | MuseDashMirror",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | MuseDashMirror",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}